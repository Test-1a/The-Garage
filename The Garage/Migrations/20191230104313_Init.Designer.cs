// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using The_Garage.Data;

namespace The_Garage.Migrations
{
    [DbContext(typeof(The_GarageContext))]
    [Migration("20191230104313_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("The_Garage.Models.Members", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jeon",
                            LastName = "James"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Rod",
                            LastName = "Rodsson"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Mikael",
                            LastName = "Mickesson"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Moha",
                            LastName = "Mohammedsson"
                        });
                });

            modelBuilder.Entity("The_Garage.Models.Types", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeOfVehicle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeOfVehicle = "Car"
                        },
                        new
                        {
                            Id = 2,
                            TypeOfVehicle = "Bus"
                        },
                        new
                        {
                            Id = 3,
                            TypeOfVehicle = "Boat"
                        },
                        new
                        {
                            Id = 4,
                            TypeOfVehicle = "Airplane"
                        },
                        new
                        {
                            Id = 5,
                            TypeOfVehicle = "Motorcycle"
                        });
                });

            modelBuilder.Entity("The_Garage.Models.Vehicles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumnOfWheels")
                        .HasColumnType("int");

                    b.Property<string>("RegNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeOfParking")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TypeId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Volvo",
                            Color = "Blue",
                            MemberId = 1,
                            Model = "Sports",
                            NumnOfWheels = 4,
                            RegNr = "ABCG123",
                            TimeOfParking = new DateTime(2019, 12, 30, 11, 43, 13, 85, DateTimeKind.Local).AddTicks(4504),
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Volvo",
                            Color = "Blue",
                            MemberId = 2,
                            Model = "Sports",
                            NumnOfWheels = 4,
                            RegNr = "ABCG123",
                            TimeOfParking = new DateTime(2019, 12, 30, 11, 43, 13, 88, DateTimeKind.Local).AddTicks(3491),
                            TypeId = 3
                        },
                        new
                        {
                            Id = 3,
                            Brand = "BMW",
                            Color = "Green",
                            MemberId = 2,
                            Model = "Business",
                            NumnOfWheels = 4,
                            RegNr = "ASD678",
                            TimeOfParking = new DateTime(2019, 12, 30, 11, 43, 13, 88, DateTimeKind.Local).AddTicks(3557),
                            TypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Airbus",
                            Color = "Black",
                            MemberId = 3,
                            Model = "Travel",
                            NumnOfWheels = 4,
                            RegNr = "ABC456",
                            TimeOfParking = new DateTime(2019, 12, 30, 11, 43, 13, 88, DateTimeKind.Local).AddTicks(3564),
                            TypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Volvo",
                            Color = "Blue",
                            MemberId = 4,
                            Model = "Sedan",
                            NumnOfWheels = 4,
                            RegNr = "XXX789",
                            TimeOfParking = new DateTime(2019, 12, 30, 11, 43, 13, 88, DateTimeKind.Local).AddTicks(3637),
                            TypeId = 5
                        });
                });

            modelBuilder.Entity("The_Garage.Models.Vehicles", b =>
                {
                    b.HasOne("The_Garage.Models.Members", "Member")
                        .WithMany("Vehicle")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("The_Garage.Models.Types", "Type")
                        .WithMany("Vehicle")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
